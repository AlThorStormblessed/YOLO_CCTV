// This is the Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [pgvector(map: "vector")]
}

model Person {
    id         String                      @id @default(uuid())
    name       String
    faceVector Unsupported("vector(512)")? // 512-dimension face embedding vector
    createdAt  DateTime                    @default(now())
    updatedAt  DateTime                    @updatedAt
    faces      Face[]
    detections Detection[]

    @@index([faceVector], type: Gist)
}

model Face {
    id         String                      @id @default(uuid())
    imageData  Bytes // Stored face image
    faceVector Unsupported("vector(512)")? // 512-dimension face embedding vector
    personId   String
    person     Person                      @relation(fields: [personId], references: [id])
    createdAt  DateTime                    @default(now())

    @@index([faceVector], type: Gist)
}

model Detection {
    id          String   @id @default(uuid())
    streamId    String
    timestamp   Float
    bbox        Json // Bounding box coordinates [x1, y1, x2, y2]
    confidence  Float
    personId    String?
    person      Person?  @relation(fields: [personId], references: [id])
    createdAt   DateTime @default(now())
    processedAt Float

    @@index([streamId, timestamp])
}

model Stream {
    id          String   @id @default(uuid())
    name        String
    rtspUrl     String   @unique
    description String?
    active      Boolean  @default(true)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

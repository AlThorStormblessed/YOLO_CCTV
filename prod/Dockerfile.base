FROM python:3.10-slim

WORKDIR /app

# Install system dependencies for OpenCV and other packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    build-essential \
    cmake \
    && rm -rf /var/lib/apt/lists/*

# Set pip timeout and retries to handle network issues
ENV PIP_DEFAULT_TIMEOUT=200
ENV PIP_RETRIES=10

# Install numpy first to ensure proper version (must be <2.0)
RUN pip install --no-cache-dir numpy==1.24.3

# Install OpenCV packages with fixed numpy version
RUN pip install --no-cache-dir opencv-python==4.7.0.72

# Install other dependencies with proper numpy compatibility
RUN pip install --no-cache-dir redis==5.0.1
RUN pip install --no-cache-dir pydantic==2.5.2 pydantic-settings==2.1.0 python-dotenv==1.0.0
RUN pip install --no-cache-dir --no-deps ultralytics==8.0.20
RUN pip install --no-cache-dir torch==2.1.0 torchvision==0.16.0 torchaudio==2.1.0 --index-url https://download.pytorch.org/whl/cpu
RUN pip install --no-cache-dir prisma==0.11.0 psycopg2-binary==2.9.9 pgvector==0.2.3

# Alternative approach to install dlib (avoiding compilation issues)
RUN pip install --no-cache-dir cmake
# Using a pre-built wheel or installing with less memory usage
RUN pip install --no-cache-dir dlib==19.24.1 --no-binary=:all: --install-option="--no" --install-option="DLIB_USE_CUDA" || \
    pip install --no-cache-dir https://github.com/z-mahmud22/Dlib_Windows_Python/releases/download/v1.0.0/dlib-19.24.0-cp310-cp310-win_amd64.whl || \
    pip install --no-cache-dir dlib==19.22.1  # Fall back to older version if all else fails

RUN pip install --no-cache-dir scikit-learn==1.2.2 flask==2.2.3
RUN pip install --no-cache-dir --no-deps deepface==0.0.79

# Copy the shared modules
COPY prod/config.py /app/prod/config.py
COPY prod/utils.py /app/prod/utils.py

# Create directory structure 
RUN mkdir -p /app/prod/face_detection
RUN mkdir -p /app/prod/face_detection/model
RUN mkdir -p /app/prod/face_recognition
RUN mkdir -p /app/prod/stream_processor
RUN mkdir -p /app/prod/result_aggregator
RUN mkdir -p /app/db

# Set Python path
ENV PYTHONPATH=/app

# Set fixed numpy version as environment variable
ENV NUMPY_VERSION=1.24.3 